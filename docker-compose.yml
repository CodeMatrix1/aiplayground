version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: aiplayground-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: aiplayground
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - aiplayground-network

  # Python Service for Diarization
  python-service:
    build:
      context: ./scripts
      dockerfile: Dockerfile.python
    container_name: aiplayground-python
    restart: unless-stopped
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./uploads:/app/uploads
      - ./scripts:/app/scripts
    networks:
      - aiplayground-network
    depends_on:
      - mongodb

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aiplayground-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mongodb://admin:password123@mongodb:27017/aiplayground?authSource=admin
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
      - python-service
    networks:
      - aiplayground-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: aiplayground-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - aiplayground-network

volumes:
  mongodb_data:
    driver: local

networks:
  aiplayground-network:
    driver: bridge
